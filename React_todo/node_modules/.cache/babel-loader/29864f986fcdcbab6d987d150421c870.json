{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tusha\\\\Desktop\\\\digikull everyday\\\\reactapp\\\\src\\\\todolist\\\\Addtodo.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addName: val => {\n      dispatch({\n        type: 'ADD_USER',\n        payload: val\n      });\n    }\n  };\n};\n\nfunction Addtodo(props) {\n  _s();\n\n  // const {userinputadd} = props\n  const [name, setname] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add an item \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => {\n        setval(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        addName(name);\n        setval('');\n      },\n      style: {\n        border: '2px solid black',\n        margin: '5px'\n      },\n      children: \" Add ToDo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Addtodo, \"v+dKmsm50HmwiTkqDz+daItuIAU=\");\n\n_c = Addtodo;\nexport default connect(null, mapDispatchToProps)(Addtodo);\n\nvar _c;\n\n$RefreshReg$(_c, \"Addtodo\");","map":{"version":3,"sources":["C:/Users/tusha/Desktop/digikull everyday/reactapp/src/todolist/Addtodo.jsx"],"names":["React","connect","useState","useEffect","mapDispatchToProps","dispatch","addName","val","type","payload","Addtodo","props","name","setname","e","setval","target","value","border","margin"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,QAAR,EAAmBC,SAAnB,QAAoC,OAApC;;;AAGA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAM;AACFC,IAAAA,OAAO,EAAIC,GAAD,IAAS;AAAEF,MAAAA,QAAQ,CAAE;AAAEG,QAAAA,IAAI,EAAC,UAAP;AAAoBC,QAAAA,OAAO,EAACF;AAA5B,OAAF,CAAR;AAA4C;AAD/D,GAAN;AAGH,CAJD;;AAMA,SAASG,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB;AACA,QAAK,CAAEC,IAAF,EAASC,OAAT,IAAqBX,QAAQ,CAAC,EAAD,CAAlC;AACA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAoB,MAAA,KAAK,EAAIU,IAA7B;AAAmC,MAAA,QAAQ,EAAGE,CAAD,IAAO;AAACC,QAAAA,MAAM,CAAED,CAAC,CAACE,MAAF,CAASC,KAAX,CAAN;AAAwB;AAA7E;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGG;AAAA;AAAA;AAAA;AAAA,YAHH,eAIG;AAAQ,MAAA,OAAO,EAAG,MAAM;AAAGX,QAAAA,OAAO,CAACM,IAAD,CAAP;AAAgBG,QAAAA,MAAM,CAAC,EAAD,CAAN;AAAW,OAAtD;AAAwD,MAAA,KAAK,EAAE;AAACG,QAAAA,MAAM,EAAC,iBAAR;AAA4BC,QAAAA,MAAM,EAAC;AAAnC,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJH;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAZQT,O;;KAAAA,O;AAaT,eAAeT,OAAO,CAAC,IAAD,EAAQG,kBAAR,CAAP,CAAmCM,OAAnC,CAAf","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {useState , useEffect } from 'react'\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        addName : (val) => { dispatch ({ type:'ADD_USER' , payload:val})}\r\n    }\r\n}\r\n\r\nfunction Addtodo(props) {\r\n    // const {userinputadd} = props\r\n    const[ name , setname ] = useState('')\r\n    return (\r\n        <div >\r\n            <h2>Add an item </h2>\r\n            <input type=\"text\"  value = {name} onChange={(e) => {setval( e.target.value)} }  /> \r\n           <br /> \r\n           <button onClick ={() => {  addName(name) ; setval('')}} style={{border:'2px solid black' , margin:'5px'}} > Add ToDo</button>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default connect(null , mapDispatchToProps)(Addtodo)"]},"metadata":{},"sourceType":"module"}