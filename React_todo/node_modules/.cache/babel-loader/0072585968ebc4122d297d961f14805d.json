{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tusha\\\\Desktop\\\\digikull everyday\\\\reactapp\\\\src\\\\todolist\\\\Addtodo.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = initialstate => {\n  return {\n    userlist: initialstate.userDetails\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addName: val => {\n      dispatch({\n        type: 'ADD_NAME',\n        payload: val\n      });\n    },\n    deleteName: val => {\n      dispatch({\n        type: 'DELETE'\n      });\n    }\n  };\n};\n\nconst checked = (item, id) => {\n  if (item.checked === true) {\n    item.id = id;\n  }\n};\n\nfunction Addtodo(props) {\n  _s();\n\n  const {\n    userlist\n  } = props;\n  const [name, setname] = useState('');\n  const {\n    addName\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add an item \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => {\n        setname(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        addName(name);\n        setname('');\n      },\n      style: {\n        border: '2px solid black',\n        margin: '5px'\n      },\n      children: \" Add ToDo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), userlist.map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'DarkBlue',\n          margin: '3px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: e\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            checked(e, i);\n            deleteName(e);\n          },\n          style: {\n            border: '2px solid black',\n            margin: '5px'\n          },\n          children: \"Completed \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 37\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Tasks completed \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Addtodo, \"v+dKmsm50HmwiTkqDz+daItuIAU=\");\n\n_c = Addtodo;\nexport default connect(mapStateToProps, mapDispatchToProps)(Addtodo);\n\nvar _c;\n\n$RefreshReg$(_c, \"Addtodo\");","map":{"version":3,"sources":["C:/Users/tusha/Desktop/digikull everyday/reactapp/src/todolist/Addtodo.jsx"],"names":["React","connect","useState","mapStateToProps","initialstate","userlist","userDetails","mapDispatchToProps","dispatch","addName","val","type","payload","deleteName","checked","item","id","Addtodo","props","name","setname","e","target","value","border","margin","map","i","color"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {useState  } from 'react'\r\n\r\nconst mapStateToProps = initialstate => {\r\n    return {\r\n        userlist: initialstate.userDetails\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        addName : (val) => { dispatch ({ type:'ADD_NAME' , payload:val})},\r\n        deleteName:(val) => {dispatch({type:'DELETE'})}\r\n    }\r\n}\r\n\r\nconst checked =(item,id)=>{\r\n    if(item.checked===true){\r\n        item.id =id \r\n    }\r\n}\r\n\r\nfunction Addtodo(props) {\r\n    const { userlist } = props\r\n    const[ name , setname ] = useState('')\r\n    const { addName, } = props\r\n    return (\r\n        <div >\r\n            <h2>Add an item </h2>\r\n            <input type=\"text\"  value = {name} onChange={(e) => {setname( e.target.value)} }  /> \r\n           <br /> \r\n           <button onClick ={() => {  addName(name) ; setname('') }} style={{border:'2px solid black' , margin:'5px'}} > Add ToDo</button>\r\n\r\n        <div>\r\n            <h2>List</h2>\r\n            {userlist.map((e, i) => <div key={i} style={{ color: 'DarkBlue', margin: '3px' }}>\r\n                <input type=\"checkbox\" name='list'  />\r\n                <input type=\"text\" value={e} />\r\n            \r\n            <button onClick={() => {checked(e,i); deleteName(e) }} style={{border:'2px solid black' , margin:'5px'}} >Completed </button>\r\n \r\n \r\n            {/* <button onClick={() => { }} style={{border:'2px solid black' , margin:'5px'}} >InComplete </button> */}\r\n            </div>)}\r\n\r\n            <br />\r\n            <h3>Tasks completed </h3>\r\n            \r\n            \r\n        </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Addtodo)"]},"metadata":{},"sourceType":"module"}