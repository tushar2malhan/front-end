{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tusha\\\\Desktop\\\\digikull everyday\\\\reactapp\\\\src\\\\todolist\\\\Addtodo.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = initialstate => {\n  return {\n    userlist: initialstate.userDetails\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addName: val => {\n      dispatch({\n        type: 'ADD_NAME',\n        payload: val\n      });\n    },\n    deleteName: val => {\n      dispatch({\n        type: 'DELETE',\n        payload: val\n      });\n    }\n  };\n};\n\nfunction Addtodo(props) {\n  _s();\n\n  const {\n    userlist\n  } = props;\n  const [name, setname] = useState('');\n  const {\n    addName,\n    deleteName\n  } = props;\n  const [enablebtn, setenablebtn] = useState(false);\n\n  const handlebutton = e => {\n    if (e.target.checked) {\n      setenablebtn(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add an item \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => {\n        setname(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        addName(name);\n        setname('');\n      },\n      style: {\n        border: '2px solid black',\n        margin: '5px'\n      },\n      children: \" Add ToDo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), userlist.map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'DarkBlue',\n          margin: '3px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          onClick: handlebutton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: e\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            deleteName({\n              i\n            });\n          },\n          style: {\n            border: '2px solid black',\n            margin: '5px'\n          },\n          children: \"Completed \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 37\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Tasks completed \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Addtodo, \"uD4EZAxTlS3G/WEuG4pZsQh2VS8=\");\n\n_c = Addtodo;\nexport default connect(mapStateToProps, mapDispatchToProps)(Addtodo);\n\nvar _c;\n\n$RefreshReg$(_c, \"Addtodo\");","map":{"version":3,"sources":["C:/Users/tusha/Desktop/digikull everyday/reactapp/src/todolist/Addtodo.jsx"],"names":["React","connect","useState","mapStateToProps","initialstate","userlist","userDetails","mapDispatchToProps","dispatch","addName","val","type","payload","deleteName","Addtodo","props","name","setname","enablebtn","setenablebtn","handlebutton","e","target","checked","value","border","margin","map","i","color"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {useState  } from 'react'\r\n\r\nconst mapStateToProps = initialstate => {\r\n    return {\r\n        userlist: initialstate.userDetails\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        addName : (val) => { dispatch ({ type:'ADD_NAME' , payload:val})},\r\n        deleteName:(val) => {dispatch({type:'DELETE', payload:val})}\r\n    }\r\n}\r\nfunction Addtodo(props) {\r\n    const { userlist } = props\r\n    const[ name , setname ] = useState('')\r\n    const { addName,deleteName } = props\r\n    const [ enablebtn , setenablebtn ] = useState(false)\r\n\r\n\r\n    const handlebutton = e => {\r\n        if(e.target.checked){\r\n            setenablebtn(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <h2>Add an item </h2>\r\n            <input type=\"text\"  value = {name} onChange={(e) => {setname( e.target.value)} }  /> \r\n           <br /> \r\n           <button onClick ={() => {  addName(name) ; setname('') }} style={{border:'2px solid black' , margin:'5px'}} > Add ToDo</button>\r\n\r\n        <div>\r\n            <h2>List</h2>\r\n            {userlist.map((e, i) => <div key={i} style={{ color: 'DarkBlue', margin: '3px' }}>\r\n               \r\n                <input type=\"radio\"  onClick={handlebutton} />\r\n                <input type=\"text\" value={e} />\r\n                <button onClick={() => { deleteName({i}) }} style={{border:'2px solid black' , margin:'5px'}} >Completed </button>\r\n\r\n            \r\n \r\n \r\n            {/* <button onClick={() => { }} style={{border:'2px solid black' , margin:'5px'}} >InComplete </button> */}\r\n\r\n            </div>)}\r\n\r\n            <br />\r\n            <h3>Tasks completed </h3>\r\n            \r\n            \r\n        </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Addtodo)"]},"metadata":{},"sourceType":"module"}