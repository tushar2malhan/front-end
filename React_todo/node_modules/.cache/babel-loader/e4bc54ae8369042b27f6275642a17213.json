{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tusha\\\\Desktop\\\\digikull everyday\\\\reactapp\\\\src\\\\todolist\\\\Addtodo.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = initialstate => {\n  return {\n    userlist: initialstate.userDetails\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addName: val => {\n      dispatch({\n        type: 'ADD_NAME',\n        payload: val\n      });\n    } // deleteName:(val) => {dispatch({type:'DELETE', payload:val})}\n\n  };\n};\n\nconst handleButton = (e, id) => {\n  if (e.target.checked) {\n    console.log(e, 'eee');\n  }\n};\n\nfunction Addtodo(props) {\n  _s();\n\n  const {\n    userlist\n  } = props;\n  const [name, setname] = useState('');\n  const {\n    addName,\n    deleteName\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add an item \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => {\n        setname(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        addName(name);\n        setname('');\n      },\n      style: {\n        border: '2px solid black',\n        margin: '5px'\n      },\n      children: \" Add ToDo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), userlist.map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'DarkBlue',\n          margin: '3px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          onClick: e => handleButton(e, e.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: e\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 37\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Tasks completed \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Addtodo, \"v+dKmsm50HmwiTkqDz+daItuIAU=\");\n\n_c = Addtodo;\nexport default connect(mapStateToProps, mapDispatchToProps)(Addtodo);\n\nvar _c;\n\n$RefreshReg$(_c, \"Addtodo\");","map":{"version":3,"sources":["C:/Users/tusha/Desktop/digikull everyday/reactapp/src/todolist/Addtodo.jsx"],"names":["React","connect","useState","mapStateToProps","initialstate","userlist","userDetails","mapDispatchToProps","dispatch","addName","val","type","payload","handleButton","e","id","target","checked","console","log","Addtodo","props","name","setname","deleteName","value","border","margin","map","i","color"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,QAAR,QAAyB,OAAzB;;;AAEA,MAAMC,eAAe,GAAGC,YAAY,IAAI;AACpC,SAAO;AACHC,IAAAA,QAAQ,EAAED,YAAY,CAACE;AADpB,GAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAM;AACFC,IAAAA,OAAO,EAAIC,GAAD,IAAS;AAAEF,MAAAA,QAAQ,CAAE;AAAEG,QAAAA,IAAI,EAAC,UAAP;AAAoBC,QAAAA,OAAO,EAACF;AAA5B,OAAF,CAAR;AAA4C,KAD/D,CAEF;;AAFE,GAAN;AAIH,CALD;;AAOA,MAAMG,YAAY,GAAG,CAACC,CAAD,EAAGC,EAAH,KAAU;AAC3B,MAAGD,CAAC,CAACE,MAAF,CAASC,OAAZ,EAAoB;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYL,CAAZ,EAAc,KAAd;AAEH;AACJ,CALD;;AAOA,SAASM,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB,QAAM;AAAEhB,IAAAA;AAAF,MAAegB,KAArB;AACA,QAAK,CAAEC,IAAF,EAASC,OAAT,IAAqBrB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAEO,IAAAA,OAAF;AAAUe,IAAAA;AAAV,MAAyBH,KAA/B;AAEA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAoB,MAAA,KAAK,EAAIC,IAA7B;AAAmC,MAAA,QAAQ,EAAGR,CAAD,IAAO;AAACS,QAAAA,OAAO,CAAET,CAAC,CAACE,MAAF,CAASS,KAAX,CAAP;AAAyB;AAA9E;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGG;AAAA;AAAA;AAAA;AAAA,YAHH,eAIG;AAAQ,MAAA,OAAO,EAAG,MAAM;AAAGhB,QAAAA,OAAO,CAACa,IAAD,CAAP;AAAgBC,QAAAA,OAAO,CAAC,EAAD,CAAP;AAAa,OAAxD;AAA0D,MAAA,KAAK,EAAE;AAACG,QAAAA,MAAM,EAAC,iBAAR;AAA4BC,QAAAA,MAAM,EAAC;AAAnC,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJH,eAMA;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKtB,QAAQ,CAACuB,GAAT,CAAa,CAACd,CAAD,EAAIe,CAAJ,kBAAU;AAAa,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,UAAT;AAAqBH,UAAAA,MAAM,EAAE;AAA7B,SAApB;AAAA,gCACpB;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,OAAO,EAAGb,CAAD,IAAOD,YAAY,CAACC,CAAD,EAAGA,CAAC,CAACC,EAAL;AAAhD;AAAA;AAAA;AAAA;AAAA,gBADoB,eAEpB;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAED;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAFoB;AAAA,SAAUe,CAAV;AAAA;AAAA;AAAA;AAAA,cAAvB,CAFL,eAaI;AAAA;AAAA;AAAA;AAAA,cAbJ,eAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH;;GAjCQT,O;;KAAAA,O;AAkCT,eAAenB,OAAO,CAACE,eAAD,EAAiBI,kBAAjB,CAAP,CAA4Ca,OAA5C,CAAf","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {useState  } from 'react'\r\n\r\nconst mapStateToProps = initialstate => {\r\n    return {\r\n        userlist: initialstate.userDetails\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        addName : (val) => { dispatch ({ type:'ADD_NAME' , payload:val})},\r\n        // deleteName:(val) => {dispatch({type:'DELETE', payload:val})}\r\n    }\r\n}\r\n\r\nconst handleButton = (e,id) => {\r\n    if(e.target.checked){\r\n        console.log(e,'eee')\r\n\r\n    }\r\n}\r\n\r\nfunction Addtodo(props) {\r\n    const { userlist } = props\r\n    const[ name , setname ] = useState('')\r\n    const { addName,deleteName } = props\r\n    \r\n    return (\r\n        <div >\r\n            <h2>Add an item </h2>\r\n            <input type=\"text\"  value = {name} onChange={(e) => {setname( e.target.value)} }  /> \r\n           <br /> \r\n           <button onClick ={() => {  addName(name) ; setname('') }} style={{border:'2px solid black' , margin:'5px'}} > Add ToDo</button>\r\n\r\n        <div>\r\n            <h2>List</h2>\r\n            {userlist.map((e, i) => <div key={i} style={{ color: 'DarkBlue', margin: '3px' }}>\r\n                <input type=\"radio\" onClick={(e) => handleButton(e,e.id)}></input>\r\n                <input type=\"text\" value={e} />\r\n\r\n            {/* {console.log(e,'e')}\r\n            {console.log(i,'i')}\r\n  */}\r\n \r\n            {/* <button onClick={() => { }} style={{border:'2px solid black' , margin:'5px'}} >InComplete </button> */}\r\n            </div>)}\r\n\r\n            <br />\r\n            <h3>Tasks completed </h3>\r\n            \r\n            \r\n        </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Addtodo)"]},"metadata":{},"sourceType":"module"}