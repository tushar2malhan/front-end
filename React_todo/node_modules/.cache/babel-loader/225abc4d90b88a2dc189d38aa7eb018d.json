{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tusha\\\\Desktop\\\\digikull everyday\\\\reactapp\\\\src\\\\todolist\\\\Addtodo.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = initialstate => {\n  return {\n    userlist: initialstate.userDetails\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addName: val => {\n      dispatch({\n        type: 'ADD_NAME',\n        payload: val\n      });\n    }\n  };\n};\n\nconst checked = () => {\n  var _s = $RefreshSig$();\n\n  return _s(function Addtodo(props) {\n    _s();\n\n    const {\n      userlist\n    } = props;\n    const [name, setname] = useState('');\n    const {\n      addName\n    } = props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add an item \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => {\n          setname(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          addName(name);\n          setname('');\n        },\n        style: {\n          border: '2px solid black',\n          margin: '5px'\n        },\n        children: \" Add ToDo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), userlist.map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: 'DarkBlue',\n            margin: '3px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"list\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: e\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {},\n            style: {\n              border: '2px solid black',\n              margin: '5px'\n            },\n            children: \"Completed \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 37\n        }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Tasks completed \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this);\n  }, \"v+dKmsm50HmwiTkqDz+daItuIAU=\");\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Addtodo);","map":{"version":3,"sources":["C:/Users/tusha/Desktop/digikull everyday/reactapp/src/todolist/Addtodo.jsx"],"names":["React","connect","useState","mapStateToProps","initialstate","userlist","userDetails","mapDispatchToProps","dispatch","addName","val","type","payload","checked","Addtodo","props","name","setname","e","target","value","border","margin","map","i","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,QAAR,QAAyB,OAAzB;;;AAEA,MAAMC,eAAe,GAAGC,YAAY,IAAI;AACpC,SAAO;AACHC,IAAAA,QAAQ,EAAED,YAAY,CAACE;AADpB,GAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAM;AACFC,IAAAA,OAAO,EAAIC,GAAD,IAAS;AAAEF,MAAAA,QAAQ,CAAE;AAAEG,QAAAA,IAAI,EAAC,UAAP;AAAoBC,QAAAA,OAAO,EAACF;AAA5B,OAAF,CAAR;AAA4C;AAD/D,GAAN;AAGH,CAJD;;AAMA,MAAMG,OAAO,GAAE;AAAA;;AAAA,YAEf,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB,UAAM;AAAEV,MAAAA;AAAF,QAAeU,KAArB;AACA,UAAK,CAAEC,IAAF,EAASC,OAAT,IAAqBf,QAAQ,CAAC,EAAD,CAAlC;AACA,UAAM;AAAEO,MAAAA;AAAF,QAAeM,KAArB;AACA,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAoB,QAAA,KAAK,EAAIC,IAA7B;AAAmC,QAAA,QAAQ,EAAGE,CAAD,IAAO;AAACD,UAAAA,OAAO,CAAEC,CAAC,CAACC,MAAF,CAASC,KAAX,CAAP;AAAyB;AAA9E;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGG;AAAA;AAAA;AAAA;AAAA,cAHH,eAIG;AAAQ,QAAA,OAAO,EAAG,MAAM;AAAGX,UAAAA,OAAO,CAACO,IAAD,CAAP;AAAgBC,UAAAA,OAAO,CAAC,EAAD,CAAP;AAAa,SAAxD;AAA0D,QAAA,KAAK,EAAE;AAACI,UAAAA,MAAM,EAAC,iBAAR;AAA4BC,UAAAA,MAAM,EAAC;AAAnC,SAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJH,eAMA;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKjB,QAAQ,CAACkB,GAAT,CAAa,CAACL,CAAD,EAAIM,CAAJ,kBAAU;AAAa,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE,UAAT;AAAqBH,YAAAA,MAAM,EAAE;AAA7B,WAApB;AAAA,kCACpB;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,IAAI,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,kBADoB,eAEpB;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,KAAK,EAAEJ;AAA1B;AAAA;AAAA;AAAA;AAAA,kBAFoB,eAIxB;AAAQ,YAAA,OAAO,EAAE,MAAM,CAAG,CAA1B;AAA4B,YAAA,KAAK,EAAE;AAACG,cAAAA,MAAM,EAAC,iBAAR;AAA4BC,cAAAA,MAAM,EAAC;AAAnC,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJwB;AAAA,WAAUE,CAAV;AAAA;AAAA;AAAA;AAAA,gBAAvB,CAFL,eAUI;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAyBH,GA/Bc;AAAA,CAAf;;AAgCA,eAAevB,OAAO,CAACE,eAAD,EAAiBI,kBAAjB,CAAP,CAA4CO,OAA5C,CAAf","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {useState  } from 'react'\r\n\r\nconst mapStateToProps = initialstate => {\r\n    return {\r\n        userlist: initialstate.userDetails\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        addName : (val) => { dispatch ({ type:'ADD_NAME' , payload:val})}\r\n    }\r\n}\r\n\r\nconst checked =()=>\r\n\r\nfunction Addtodo(props) {\r\n    const { userlist } = props\r\n    const[ name , setname ] = useState('')\r\n    const { addName, } = props\r\n    return (\r\n        <div >\r\n            <h2>Add an item </h2>\r\n            <input type=\"text\"  value = {name} onChange={(e) => {setname( e.target.value)} }  /> \r\n           <br /> \r\n           <button onClick ={() => {  addName(name) ; setname('') }} style={{border:'2px solid black' , margin:'5px'}} > Add ToDo</button>\r\n\r\n        <div>\r\n            <h2>List</h2>\r\n            {userlist.map((e, i) => <div key={i} style={{ color: 'DarkBlue', margin: '3px' }}>\r\n                <input type=\"checkbox\" name='list'  />\r\n                <input type=\"text\" value={e} />\r\n            \r\n            <button onClick={() => { }} style={{border:'2px solid black' , margin:'5px'}} >Completed </button>\r\n            {/* <button onClick={() => { }} style={{border:'2px solid black' , margin:'5px'}} >InComplete </button> */}\r\n            </div>)}\r\n\r\n            <br />\r\n            <h3>Tasks completed </h3>\r\n            \r\n            \r\n        </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Addtodo)"]},"metadata":{},"sourceType":"module"}