{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tusha\\\\Desktop\\\\digikull everyday\\\\reactapp\\\\src\\\\todolist\\\\Addtodo.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = initialstate => {\n  return {\n    userlist: initialstate.userDetails\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addName: val => {\n      dispatch({\n        type: 'ADD_NAME',\n        payload: val\n      });\n    },\n    deleteName: val => {\n      dispatch({\n        type: 'DELETE',\n        payload: val\n      });\n    }\n  };\n};\n\nfunction Addtodo(props) {\n  _s();\n\n  const {\n    userlist\n  } = props;\n  const [name, setname] = useState('');\n  const {\n    addName,\n    deleteName\n  } = props;\n  const [enablebtn, setenablebtn] = useState('');\n\n  const handlebutton = (e, id) => {\n    if (e.target.checked) {\n      setenablebtn(id);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add an item \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => {\n        setname(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        addName(name);\n        setname('');\n      },\n      style: {\n        border: '2px solid black',\n        margin: '5px'\n      },\n      children: \" Add ToDo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), userlist.map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'DarkBlue',\n          margin: '3px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"btn\",\n          onClick: e => handlebutton(e, i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: e\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), enablebtn == i && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            deleteName({\n              i\n            });\n          },\n          style: {\n            border: '2px solid black',\n            margin: '5px'\n          },\n          children: \"Completed \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {},\n          style: {\n            border: '2px solid black',\n            margin: '5px'\n          },\n          children: \"InComplete \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Tasks completed \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 41\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 8\n  }, this);\n}\n\n_s(Addtodo, \"KBYle7bhjOFsWoKDvFFD4b3xtTs=\");\n\n_c = Addtodo;\nexport default connect(mapStateToProps, mapDispatchToProps)(Addtodo);\n\nvar _c;\n\n$RefreshReg$(_c, \"Addtodo\");","map":{"version":3,"sources":["C:/Users/tusha/Desktop/digikull everyday/reactapp/src/todolist/Addtodo.jsx"],"names":["React","connect","useState","mapStateToProps","initialstate","userlist","userDetails","mapDispatchToProps","dispatch","addName","val","type","payload","deleteName","Addtodo","props","name","setname","enablebtn","setenablebtn","handlebutton","e","id","target","checked","value","border","margin","map","i","color"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,eAAe,GAAGC,YAAY,IAAI;AACpC,SAAO;AACHC,IAAAA,QAAQ,EAAED,YAAY,CAACE;AADpB,GAAP;AAGH,CAJD;;AAKA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHC,IAAAA,OAAO,EAAGC,GAAD,IAAS;AAAEF,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,OAAO,EAAEF;AAA7B,OAAD,CAAR;AAA8C,KAD/D;AAEHG,IAAAA,UAAU,EAAGH,GAAD,IAAS;AAAEF,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,OAAO,EAAEF;AAA3B,OAAD,CAAR;AAA4C;AAFhE,GAAP;AAIH,CALD;;AAMA,SAASI,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB,QAAM;AAAEV,IAAAA;AAAF,MAAeU,KAArB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEO,IAAAA,OAAF;AAAWI,IAAAA;AAAX,MAA0BE,KAAhC;AACA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,EAAD,CAA1C;;AAGJ,QAAMkB,YAAY,GAAG,CAACC,CAAD,EAAIC,EAAJ,KAAW;AAC5B,QAAID,CAAC,CAACE,MAAF,CAASC,OAAb,EAAsB;AAClBL,MAAAA,YAAY,CAACG,EAAD,CAAZ;AACC;AACJ,GAJL;;AAMI,sBACG;AAAA,4BACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADL,eAEK;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEN,IAA1B;AAAgC,MAAA,QAAQ,EAAGK,CAAD,IAAO;AAAEJ,QAAAA,OAAO,CAACI,CAAC,CAACE,MAAF,CAASE,KAAV,CAAP;AAAyB;AAA5E;AAAA;AAAA;AAAA;AAAA,YAFL,eAGK;AAAA;AAAA;AAAA;AAAA,YAHL,eAIK;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAEhB,QAAAA,OAAO,CAACO,IAAD,CAAP;AAAeC,QAAAA,OAAO,CAAC,EAAD,CAAP;AAAa,OAArD;AAAuD,MAAA,KAAK,EAAE;AAAES,QAAAA,MAAM,EAAE,iBAAV;AAA6BC,QAAAA,MAAM,EAAE;AAArC,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJL,eAKK;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKtB,QAAQ,CAACuB,GAAT,CAAa,CAACP,CAAD,EAAIQ,CAAJ,kBAAU;AAAa,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,UAAT;AAAqBH,UAAAA,MAAM,EAAE;AAA7B,SAApB;AAAA,gCAEpB;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,IAAI,EAAC,KAAzB;AAA+B,UAAA,OAAO,EAAGN,CAAD,IAAOD,YAAY,CAACC,CAAD,EAAIQ,CAAJ;AAA3D;AAAA;AAAA;AAAA;AAAA,gBAFoB,eAGpB;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAER;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAHoB,EAInBH,SAAS,IAAIW,CAAb,iBAAkB;AAAQ,UAAA,OAAO,EAAE,MAAM;AAAEhB,YAAAA,UAAU,CAAC;AAAEgB,cAAAA;AAAF,aAAD,CAAV;AAAmB,WAA5C;AAA8C,UAAA,KAAK,EAAE;AAAEH,YAAAA,MAAM,EAAE,iBAAV;AAA6BC,YAAAA,MAAM,EAAE;AAArC,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJC,eAKpB;AAAQ,UAAA,OAAO,EAAE,MAAM,CAAG,CAA1B;AAA4B,UAAA,KAAK,EAAE;AAAED,YAAAA,MAAM,EAAE,iBAAV;AAA6BC,YAAAA,MAAM,EAAE;AAArC,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALoB,eAQxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARwB;AAAA,SAAUE,CAAV;AAAA;AAAA;AAAA;AAAA,cAAvB,CAFL,eAaI;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALL;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAyBH;;GAtCQf,O;;KAAAA,O;AAuCT,eAAeb,OAAO,CAACE,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CO,OAA7C,CAAf","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useState } from 'react'\r\n\r\nconst mapStateToProps = initialstate => {\r\n    return {\r\n        userlist: initialstate.userDetails\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addName: (val) => { dispatch({ type: 'ADD_NAME', payload: val }) },\r\n        deleteName: (val) => { dispatch({ type: 'DELETE', payload: val }) }\r\n    }\r\n}\r\nfunction Addtodo(props) {\r\n    const { userlist } = props\r\n    const [name, setname] = useState('')\r\n    const { addName, deleteName } = props\r\n    const [enablebtn, setenablebtn] = useState('')\r\n\r\n\r\nconst handlebutton = (e, id) => {\r\n    if (e.target.checked) {\r\n        setenablebtn(id)\r\n        }\r\n    }\r\n\r\n    return (\r\n       <div >\r\n            <h2>Add an item </h2>\r\n            <input type=\"text\" value={name} onChange={(e) => { setname(e.target.value) }} />\r\n            <br />\r\n            <button onClick={() => { addName(name); setname('') }} style={{ border: '2px solid black', margin: '5px' }} > Add ToDo</button>\r\n            <div>\r\n                <h2>List</h2>\r\n                {userlist.map((e, i) => <div key={i} style={{ color: 'DarkBlue', margin: '3px' }}>\r\n                   \r\n                    <input type=\"radio\" name='btn' onClick={(e) => handlebutton(e, i)} />\r\n                    <input type=\"text\" value={e} />\r\n                    {enablebtn == i && <button onClick={() => { deleteName({ i }) }} style={{ border: '2px solid black', margin: '5px' }} >Completed </button>}\r\n                    <button onClick={() => { }} style={{ border: '2px solid black', margin: '5px' }} >InComplete </button>\r\n\r\n\r\n                <h3>Tasks completed </h3>\r\n                </div>)}\r\n\r\n                <br />\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Addtodo)"]},"metadata":{},"sourceType":"module"}